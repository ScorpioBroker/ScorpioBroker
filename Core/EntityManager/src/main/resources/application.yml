

server:
  port: 1025
  tomcat:
    max:
      threads: 50
#Entity-Manager topics properties
entity:
  topic: ENTITY
  create:
    topic: ENTITY_CREATE
  append:
    topic: ENTITY_APPEND
  update:
    topic: ENTITY_UPDATE
  delete:
    topic: ENTITY_DELETE
  index:
    topic: ENTITY_INDEX

csources:
  registration:
    topic: CONTEXT_REGISTRY
#kafka broker path
bootstrap:
  servers: localhost:9092

batchoperations:
  maxnumber:
    create: 1000
    update: 1000
    upsert: 1000
    delete: 1000



#Entity Append ovewrite options
append:
  overwrite: noOverwrite



management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    restart:
      enabled: true



spring:
  application:
    name: entity-manager
  kafka:
    admin:
      properties:
        cleanup:
          policy: compact
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
      bindings:
        ENTITY_WRITE_CHANNEL:
          destination: ENTITY
          contentType: application/json
#        ENTITY_READ_CHANNEL:
#          destination: ENTITY
#          contentType: application/json
#          group: entity
        KVENTITY_WRITE_CHANNEL:
          destination: KVENTITY
          contentType: application/json
        ENTITY_WITHOUT_SYSATTRS_WRITE_CHANNEL:
          destination: ENTITY_WITHOUT_SYSATTRS
          contentType: application/json
        CREATE_WRITE_CHANNEL:
          destination: ENTITY_CREATE
          contentType: application/json
        #CREATE_READ_CHANNEL:
          #destination: ENTITY_CREATE
          #contentType: application/json
          #group: create
        APPEND_WRITE_CHANNEL:
          destination: ENTITY_APPEND
          contentType: application/json
        #APPEND_READ_CHANNEL:
          #destination: ENTITY_APPEND
          #contentType: application/json
          #group: append
        UPDATE_WRITE_CHANNEL:
          destination: ENTITY_UPDATE
          contentType: application/json
        #UPDATE_READ_CHANNEL:
          #destination: ENTITY_UPDATE
          #contentType: application/json
          #group: update
        DELETE_WRITE_CHANNEL:
          destination: ENTITY_DELETE
          contentType: application/json
        #DELETE_READ_CHANNEL:
          #destination: ENTITY_DELETE
          #contentType: application/json
          #group: delete
        CONTEXT_REGISTRY_WRITE_CHANNEL:
          destination: CONTEXT_REGISTRY
          contentType: application/json
        CONTEXT_REGISTRY_UPDATE_CHANNEL:
          destination: CONTEXT_UPDATE
          contentType: application/json
        INDEX_WRITE_CHANNEL:
          destination: ENTITY_INDEX
          contentType: application/json
        ATCONTEXT_WRITE_CHANNEL:
          destination: ATCONTEXT
          contentType: application/json
  datasource:
    hikari:
      connectionTimeout: 30000
      idleTimeout: 30000
      maxLifetime: 2000000
      maximumPoolSize: 20
      minimumIdle: 5
      poolName: SpringBootHikariCP
    password: ngb
    url: jdbc:postgresql://localhost:5432/ngb?ApplicationName=ngb_registrymanager
    username: ngb
  flyway:
    baselineOnMigrate: true  
writer:
  datasource:
    hikari:
      connectionTimeout: 30000
      idleTimeout: 30000
      maxLifetime: 2000000
      maximumPoolSize: 20
      minimumIdle: 5
      poolName: SpringBootHikariCP_Writer
    password: ngb
    url: jdbc:postgresql://localhost:5432/ngb?ApplicationName=ngb_entitymanager_writer
    username: ngb
  enabled: true
reader:
  enabled: true
  datasource:
    url: "jdbc:postgresql://localhost:5432/ngb?ApplicationName=ngb_entitymanager_reader"
    username: ngb
    password: ngb
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP_Reader
      maxLifetime: 2000000
      connectionTimeout: 30000
  