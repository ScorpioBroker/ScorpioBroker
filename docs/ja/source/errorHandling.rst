**********************
Scorpio でのエラー処理
**********************

このセクションでは、ScorpioBroker システムのエラー処理メカニズムに関する情報を提供します。

以下にリストされているのは、システムのイベントです。

.. list-table::  **エラー処理** 
   :widths: 5 15 35 15 10 20
   :header-rows: 1

   * - S.No.				
     - オペレーション/イベント
     - シナリオの説明
     - 関連モジュール
     - エラーコード/レスポンス
     - アクション
      
   * - 1.
     - InvalidRequest								
     - オペレーションに関連付けられたリクエストが構文的に無効であるか、間違ったコンテンツが含まれています
     - REST Controller
     - HTTP 400
     - エラーをログに記録し、リクエスターに通知します

   * - 2.
     - BadRequestData								
     - リクエストには、オペレーションの要件を満たさない入力データが含まれています
     - REST Controller
     - HTTP 400
     - エラーをログに記録し、リクエスターに通知します

   * - 3.
     - AlreadyExists								
     - 参照された要素はすでに存在します
     - REST Controller
     - HTTP 409
     - エラーをログに記録し、リクエスターに通知します

   * - 4.
     - OperationNotSupported								
     - オペレーションはサポートされていません
     - REST Controller
     - HTTP 422
     - エラーをログに記録し、リクエスターに通知します

   * - 5.
     - ResourceNotFound								
     - 参照されたリソースが見つかりません
     - REST Controller
     - HTTP 404
     - エラーをログに記録し、リクエスターに通知します

   * - 6.
     - InternalError								
     - オペレーション実行中にエラーが発生しました
     - REST Controller
     - HTTP 500
     - エラーをログに記録し、リクエスターに通知します

   * - 7.
     - Method Not Allowed								
     - クライアントがリソースに対して間違った HTTP 動詞を呼び出すとエラーが発生しました
     - REST Controller
     - HTTP 405
     - エラーをログに記録し、リクエスターに通知します

エラーは、実装ロジックの内部でも発生する可能性のあるさまざまな例外について、次のカテゴリに分類することもできることに
注意してください:

1. 低い重要度 (Low criticality) とは、ソフトウェアロジックで処理する必要のあるエラーを含み、構成の問題が原因であり、
リセットやシステムの再起動などを必要としないものです。

2. 中程度の重要度 (Medium criticality) は、ソフトウェアロジックの処理のために試行されるものですが、システムリセット、
チップリセットが必要な場合があり、システムが大幅に中断される場合があります。

3. 高い重要度 (High criticality) は、発生してはならないハードウェアベースのエラーであり、発生した場合はシステムの
リセットが必要になる場合があります。

さまざまなカテゴリのエラーに対するフェイルセーフメカニズム：

a. 低い重大度 (Low criticality) のエラーの場合、ロギングが実行され、再試行が実行され、ロールバックと上位層への失敗の
送信によってエラーが処理されます。

b. 高い重大度 (High criticality) のエラーの場合、緊急エラーがログに記録され、
再起動が推奨されます。

c. 中程度の重大度 (Medium criticality) のエラーの場合、再試行メカニズムが実装され、緊急ログがシステムにさらにログに
記録され、管理者に再起動することをお勧めします。

初期化中の障害は緊急事態 (emergency) としてログに記録され、エラーは呼び出し元のプログラムに返されます。
