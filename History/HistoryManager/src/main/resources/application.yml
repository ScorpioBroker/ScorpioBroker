mysettings:
  application-name: history-manager
  kafka:
    bootstrap:
      host: ${kafka.host:localhost}
      port: ${kafka.port:9092}
  postgres:
    host: ${dbhost:localhost}
    port: ${dbport:5432}
    username: ${dbuser:ngb}
    password: ${dbpass:ngb}
    database-name: ${dbname:ngb}
  gateway:
    host: ${gateway.host:localhost}
    port: ${gateway.port:9090}
jdbcurl: jdbc:postgresql://${mysettings.postgres.host}:${mysettings.postgres.port}/${mysettings.postgres.database-name}?ApplicationName=${mysettings.application-name}
bootstrap:
  servers: ${mysettings.kafka.bootstrap.host}:${mysettings.kafka.bootstrap.port}

spring:
#  mvc.pathpattern.matching-strategy: ant_path_matcher
  application.name: ${mysettings.application-name}
  main:
    lazy-initialization: true
  datasource:
    password: ${mysettings.postgres.password}
    url: ${jdbcurl}
    username: ${mysettings.postgres.username}
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP
      maxLifetime: 2000000
      connectionTimeout: 30000
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${bootstrap.servers}
      bindings:
         TEMPORAL_ENTITY_WRITE_CHANNEL:
          destination: TEMPORALENTITY
          contentType: application/json

server:
  port: 1040



entity:
  create:
    topic: ENTITY_CREATE
  append:
    topic: ENTITY_APPEND
  update:
    topic: ENTITY_UPDATE
  delete:
    topic: ENTITY_DELETE
  temporal:
    topic: TEMPORALENTITY

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    restart:
      enabled: true


atcontext:
  url: http://${mysettings.gateway.host}:${mysettings.gateway.port}/ngsi-ld/contextes/

reader:
  enabled: true
  datasource:
    password: ${mysettings.postgres.password}
    url: ${jdbcurl}
    username: ${mysettings.postgres.username}
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP_Reader
      maxLifetime: 2000000
      connectionTimeout: 30000

writer:
  enabled: true
  datasource:
    password: ${mysettings.postgres.password}
    url: ${jdbcurl}
    username: ${mysettings.postgres.username}
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP_Writer
      maxLifetime: 2000000
      connectionTimeout: 30000
defaultLimit: 50
maxLimit: 500
               
          