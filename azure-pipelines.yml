trigger:
- quarkus-release/4.1.15

# variables:
#   - name: acrRepo
#     value: iot
#   - name: acrName
#     value: iotsharedacr
#   - name: ProjectName
#     value: scorpiobroker
#   - template: variables.yml

# pool:
#   name: $(SelfHostedPoolName)

# resources:
#   pipelines:
#     - pipeline: ci-pipeline
#       project: Fiware
#       source: scorpiobroker-ci-pipeline
#       branch: main
#   repositories:
#   - repository: kubernetes-platform
#     type: git
#     name: FT Operations/kubernetes-platform
#     ref: refs/tags/v3.2.1
#     endpoint: KMDDK-organization-GIT


    
# stages:
#   - template: stages/ci-cd/cd-steps-template.yml@kubernetes-platform
#     parameters:
#       AzureConnectionName: ${{ variables['AzureSubscription.ServiceConnection'] }}
#       BackendResourceGroupName: $(TerraformBackendResourceGroupName)
#       BackendStorageAccountName: $(TerraformBackendStorageAccountName)
#       DeploymentEnvironmentName: $(DeploymentEnvironmentPrefix)-$(ProjectName)
#       ProjectName: $(ProjectName)
#       Namespace: $(ProductName)
#       AcrRepository: $(acrRepo)
#       AcrName: $(acrName)
#       EnvironmentName: $(EnvironmentName)
#       ForceACRasImageRepo: false

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.17'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'clean verify'
    options: '-Dos=java -B -Dmaven.test.skip=true'    

- task: Docker@2
  displayName: Build docker image for AllInOneRunner only
  inputs:    
    command: build
    buildContext: AllInOneRunner
    # /home/vsts/work/1/s/src/main/resources/dockerfiles/dockerfile-java
    dockerfile: AllInOneRunner/src/main/resources/dockerfiles/dockerfile-java
    repository: scorpiobroker
    tags: |
      test

- script: bash docker images ls

# - task: Docker@2
#   displayName: Push docker image
#   inputs:
#     command: push
#     containerRegistry: ctoofficelabacr
#     repository: scorpiobroker


#     Dockerfile: app/Dockerfile
    # tags

# - task: Maven@3
#   inputs:
#     mavenPomFile: 'AllInOneRunner/pom.xml'
#     mavenOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.17'
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: false
#     # testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'docker:build -P docker'
#     options: '-B -Dmaven.test.skip=true'

  # - task: Docker@2
  #   displayName: Push an image to container registry
  #   inputs:
  #     # command: buildAndPush
  #     # scorpiobroker/all-in-one-runner:<tag>
  #     command: push
  #     repository: $(imageRepository)
  #     dockerfile: $(dockerfilePath)
  #     containerRegistry: $(dockerRegistryServiceConnection)
  #     tags: |
  #       $(tag)

# - task: CopyFiles@2
#   inputs:
#   # /home/vsts/work/1/s/AllInOneRunner/target/all-in-one-runner-4.1.15-SNAPSHOT.jar
#     Contents: 'target/all-in-one-runner-*.jar'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'
#     CleanTargetFolder: true

# - task: PublishPipelineArtifact@1
#   inputs:
#     # targetPath: '$(Build.ArtifactStagingDirectory)/target'
#     targetPath: 'AllInOneRunner/target/all-in-one-runner-*.jar'
#     artifact: 'scorpiobroker'

# publish to deocker registry
  # container_registry_resource_group_name_shared_acr = "iot-shared-ACR-rg"
  # container_registry_name_shared_acr                = "iotsharedacr"


