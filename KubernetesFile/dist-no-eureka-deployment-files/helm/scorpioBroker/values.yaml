## namespace for deployment
namespace: scorpio-broker
profile: dist

################################### SpringArgs #######################################################################
springArgs:
  overrideSpringArgs: false
  value: >
   
################################### EntityManager ##########################################################################
entityManager:
## Enable the entityManager deployment & service
  enabled: true 
  name: entity-manager
  
## Number of entityManager instances to deploy
##
  replicas: 1
## Scorpio Broker entityManager image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio       
   repository: scorpiobroker/entity-manager
   # -- tag of the image to be used
   tag: java-kafka-eureka-latest
   no_eureka_tag: java-kafka-latest
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

  ## -- additional labels for the deployment, if required
  additionalLabels: {}
  ## -- additional annotations for the deployment, if required
  additionalAnnotations: {}
  ## -- selector template
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  ## -- tolerations template
  ## ref: ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## -- affinity template
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

## entityManager containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi

   ## containers'  readiness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  readinessProbe:
    initialDelaySeconds: 40
    failureThreshold: 6
    periodSeconds: 10

  ## containers'  liveness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  livenessProbe:
    initialDelaySeconds: 40
    failureThreshold: 6
    periodSeconds: 10
 
 
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for EntityManager
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80
   
################################### HistoryManager ##########################################################################
historyManager:
## Enable the HistoryManager deployment & service
  enabled: true 
  name: history-manager
  
## Number of HistoryManager instances to deploy
##
  replicas: 1
## Scorpio Broker HistoryManager image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio        
   repository: scorpiobroker/history-manager
   # -- tag of the image to be used
   tag: java-kafka-eureka-latest
   no_eureka_tag: java-kafka-latest
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

  ## -- additional labels for the deployment, if required
  additionalLabels: {}
  ## -- additional annotations for the deployment, if required
  additionalAnnotations: {}
  ## -- selector template
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  ## -- tolerations template
  ## ref: ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## -- affinity template
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

## HistoryManager containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi
 
   ## containers'  readiness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  readinessProbe:
    initialDelaySeconds: 40
    failureThreshold: 6
    periodSeconds: 10

  ## containers'  liveness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  livenessProbe:
    initialDelaySeconds: 40
    failureThreshold: 6
    periodSeconds: 10

 
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for HistoryManager
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80

################################### QueryManager ##########################################################################
queryManager:
## Enable the QueryManager deployment & service
  enabled: true 
  name: query-manager
  
## Number of QueryManager instances to deploy
##
  replicas: 1
## Scorpio Broker QueryManager image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio       
   repository: scorpiobroker/query-manager
   # -- tag of the image to be used
   tag: java-kafka-eureka-latest
   no_eureka_tag: java-kafka-latest
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

  ## -- additional labels for the deployment, if required
  additionalLabels: {}
  ## -- additional annotations for the deployment, if required
  additionalAnnotations: {}
  ## -- selector template
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  ## -- tolerations template
  ## ref: ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## -- affinity template
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

## QueryManager containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi


   ## containers'  readiness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  readinessProbe:
    initialDelaySeconds: 40
    failureThreshold: 6
    periodSeconds: 10

  ## containers'  liveness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  livenessProbe:
    initialDelaySeconds: 40
    failureThreshold: 6
    periodSeconds: 10

 
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for QueryManager
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80
   
################################### RegistryManager ##########################################################################
registryManager:
## Enable the RegistryManager deployment & service
  enabled: true 
  name: registry-manager
  
## Number of RegistryManager instances to deploy
##
  replicas: 1
## Scorpio Broker RegistryManager image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio       
   repository: scorpiobroker/registry-manager
   # -- tag of the image to be used
   tag: java-kafka-eureka-latest
   no_eureka_tag: java-kafka-latest
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

  ## -- additional labels for the deployment, if required
  additionalLabels: {}
  ## -- additional annotations for the deployment, if required
  additionalAnnotations: {}
  ## -- selector template
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  ## -- tolerations template
  ## ref: ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## -- affinity template
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

## RegistryManager containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi

  
   ## containers'  readiness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  readinessProbe:
    initialDelaySeconds: 40
    failureThreshold: 6
    periodSeconds: 10

  ## containers'  liveness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  livenessProbe:
    initialDelaySeconds: 40
    failureThreshold: 6
    periodSeconds: 10

 
## Pod Security Context
## ref: https://kuberne\tes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for RegistryManager
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80

################################### RegistrySubscriptionManager ##########################################################################
registrySubscriptionManager:
## Enable the RegistrySubscriptionManager deployment & service
  enabled: true
  name: registry-subscription-manager

## Number of RegistrySubscriptionManager instances to deploy
##
  replicas: 1
## Scorpio Broker RegistrySubscriptionManager image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes.
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio
   repository: scorpiobroker/registry-subscription-manager
   # -- tag of the image to be used
   tag: java-kafka-eureka-latest
   no_eureka_tag: java-kafka-latest
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

  ## -- additional labels for the deployment, if required
  additionalLabels: {}
  ## -- additional annotations for the deployment, if required
  additionalAnnotations: {}
  ## -- selector template
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  ## -- tolerations template
  ## ref: ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## -- affinity template
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

## RegistrySubscriptionManager containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 250m
  #   memory: 1Gi
  # requests:
  #   cpu: 250m
  #   memory: 256Mi


   ## containers'  readiness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  readinessProbe:
    initialDelaySeconds: 40
    failureThreshold: 6
    periodSeconds: 10

  ## containers'  liveness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  livenessProbe:
    initialDelaySeconds: 40
    failureThreshold: 6
    periodSeconds: 10


## Pod Security Context
## ref: https://kuberne\tes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}

## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for RegistrySubscriptionManager
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80

################################### SubscriptionManager ##########################################################################
subscriptionManager:
## Enable the SubscriptionManager deployment & service
  enabled: true 
  name: subscription-manager
  
## Number of SubscriptionManager instances to deploy
##
  replicas: 1
## Scorpio Broker SubscriptionManager image version
## ref: https://hub.docker.com/r/scorpiobroker/scorpio
## Please use only latest version of docker images as few older images might not work with kubernetes. 
##
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 25%
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 25%
  ## configuration of the image to be used
  image:
   ## -- scorpiobroker image name
   # ref: https://hub.docker.com/r/scorpiobroker/scorpio       
   repository: scorpiobroker/subscription-manager
   # -- tag of the image to be used
   tag: java-kafka-eureka-latest
   no_eureka_tag: java-kafka-latest
## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
   pullPolicy: Always

  ## -- additional labels for the deployment, if required
  additionalLabels: {}
  ## -- additional annotations for the deployment, if required
  additionalAnnotations: {}
  ## -- selector template
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  ## -- tolerations template
  ## ref: ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## -- affinity template
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

## SubscriptionManager containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to use HPA or specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits: 
  #   cpu: 250m
  #   memory: 1Gi
  # requests: 
  #   cpu: 250m
  #   memory: 256Mi
  
  ## containers'  readiness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  readinessProbe:
    initialDelaySeconds: 40
    failureThreshold: 6
    periodSeconds: 10

  ## containers'  liveness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  livenessProbe:
    initialDelaySeconds: 40
    failureThreshold: 6
    periodSeconds: 10

  
  
    
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
  securityContext: {}
  
## Pod restart policy
  restartPolicy: Always

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
   enabled: false
  ## Name of an already existing service account. Setting this value disables the automatic service account creation.
   name: ""

  terminationGracePeriodSeconds: 30

## Enable HPA for SubscriptionManager
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
  hpa:
   enabled: true
   # -- minimum number of replicas to which the autoscaler can scale down
   minReplicas: 1
   # -- maximum number of pods that can be set by the autoscaler
   maxReplicas: 5
   targetCPUUtilizationPercentage: 80

ingress:
  enabled: true
  # Used to create an Ingress record.
   
  annotations:
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  tls:
  # Secrets must be manually created in the namespace.
  # - secretName: chart-example-tls
  #   hosts:
  #     - scorpio.domain.example    
