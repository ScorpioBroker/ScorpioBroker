# Increase the Hystrix timeout to 60s (globally)
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000


#GET request configuration for QUERY-MANAGER 
ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000



query-manager:
  request-path: /ngsi-ld/v1/entities
  target-service: aio-runner
  http-method: GET
entity-manager:
  request-path: /ngsi-ld/v1/entities
  target-service: aio-runner
  http-method: POST
spring:
  application:
    name: gateway


server:
  port: 9090
  tomcat:
    max:
      threads:2000

eureka:
  client:
    register-with-eureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

zuul:
  ignored-services: '*'
  ribbon:
    eager-load:
      enabled: true
  semaphore:
    maxSemaphores: 60000
  host:
    connect-timeout-millis: 60000
    socket-timeout-millis: 60000
  routes:
    entity-manager:
      sensitiveHeaders:
      path: /ngsi-ld/v1/entities/**
      serviceId: aio-runner
      stripPrefix: false
    query-manager_1:
      sensitiveHeaders:
      path: /ngsi-ld/v1/attributes/**     
      serviceId: aio-runner
      stripPrefix: false
    query-manager_2:
      sensitiveHeaders:
      path: /ngsi-ld/v1/types/**     
      serviceId: aio-runner
      stripPrefix: false
    postquery:
      sensitiveHeaders:
      path: /ngsi-ld/v1/entityOperations/query/**
      serviceId: aio-runner
      stripPrefix: false
    subscription-manager:
      sensitiveHeaders:
      path: /ngsi-ld/v1/subscriptions/**
      serviceId: aio-runner
      stripPrefix: false
    context-manager:
      sensitiveHeaders:
      path: /ngsi-ld/v1/csourceRegistrations/**
      serviceId: aio-runner
      stripPrefix: false
    subforeg:
      sensitiveHeaders:
      path: /ngsi-ld/v1/csourceSubscriptions/**
      serviceId: aio-runner
      stripPrefix: false
    batchoperations:
      sensitiveHeaders:
      path: /ngsi-ld/v1/entityOperations/**
      serviceId: aio-runner
      stripPrefix: false
    history-manager:
      sensitiveHeaders:
      path: /ngsi-ld/v1/temporal/entities/**
      serviceId: aio-runner
      stripPrefix: false
    atcontext-server:
      sensitiveHeaders:
      path: /ngsi-ld/contextes/**
      serviceId: aio-runner
      stripPrefix: false
    infos:
      sensitiveHeaders:
      path: /scorpio/v1/info/**
      serviceId: aio-runner
      stripPrefix: false
    health:
      sensitiveHeaders:
      path: /health/**
      serviceId: aio-runner
      stripPrefix: false
    corecontext:
      sensitiveHeaders:
      path: /corecontext/**
      serviceId: aio-runner
      stripPrefix: false
    test-manager:
      sensitiveHeaders:
      path: /test/**
      serviceId: testmanager
      stripPrefix: false
security:
  active: false
  oauth2:
    client:
    # for keycloak configure
      #accessTokenUri: http://10.0.4.33:8080/auth/realms/mykeycloak/protocol/openid-connect/token
      #userAuthorizationUri: http://10.0.4.33:8080/auth/realms/mykeycloak/protocol/openid-connect/auth
      #clientId: authserver
      #clientSecret: ae8c99a9-f98d-41e9-8fb2-d348acb987e0
    # for ketrock configure  
      accessTokenUri: http://172.30.64.120:3000/oauth2/token
      userAuthorizationUri: http://172.30.64.120:3000/oauth2/authorize
      clientId: a2034c11-d2a9-4cab-9fac-ff65425bd53f
      clientSecret: 7364baec-6d6f-4307-8c71-d66e1e6c3afc
    resource:
    # for keycloak configure
      #userInfoUri: http://10.0.4.33:8080/auth/realms/mykeycloak/protocol/openid-connect/userinfo
    # for keycloak configure
      userInfoUri: http://172.30.64.120:3000/user
logging:
  level:
    root: ERROR
