
server:
  port: 1030
spring:
  application:
    name: c-sources
  main:
    lazy-initialization: true
  kafka:
    admin:
      properties:
        cleanup:
          policy: compact 
  datasource:
    url: "jdbc:postgresql://localhost:5432/ngb?ApplicationName=ngb_registrymanager"
    username: ngb
    password: ngb
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP
      maxLifetime: 2000000
      connectionTimeout: 30000


  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
      bindings:
        CSOURCE_REGISTRATION_WRITE_CHANNEL:
          destination: CONTEXT_SOURCE
          contentType: application/json
        CSOURCE_NOTIFICATION_WRITE_CHANNEL:
          destination: CONTEXT_SOURCE_NOTIFICATION
          contentType: application/json
#        CSOURCE_REGISTRATION_READ_CHANNEL:
#          destination: CONTEXT_SOURCE
#          contentType: application/json
#          group: csource
#       CONTEXT_REGISTRY_READ_CHANNEL:
#          destination: CONTEXT_REGISTRY
#          contentType: application/json
#          group: csourceregistry
#        CONTEXT_UPDATE_READ_CHANNEL:
#          destination: CONTEXT_UPDATE
#          contentType: application/json
#          group: csourceupdate
        ATCONTEXT_WRITE_CHANNEL:
          destination: ATCONTEXT
          contentType: application/json
        CSOURCE_SUBSCRIPTION_WRITE_CHANNEL:
          destination: CSOURCE_SUBSCRIPTIONS
          contentType: application/json  

#C-Source topics properties
csource:
  registry:
    topic: CONTEXT_REGISTRY
  source:
    topic: CONTEXT_SOURCE
  notification:
    topic: CONTEXT_SOURCE_NOTIFICATION
  query:
    topic: CONTEXT_REGISTRY_QUERY
    result:
      topic: CONTEXT_REGISTRY_QUERY_RESULT
      
submanager:
  subscription:
    topic: SUBSCRIPTIONS


#kafka broker path
bootstrap:
  servers: localhost:9092

#enable log compaction


# (default) spring.datasource.type=com.zaxxer.hikari.HikariDataSource


reader:
  enabled: true
  datasource:
    url: "jdbc:postgresql://localhost:5432/ngb?ApplicationName=ngb_storagemanager_reader"
    username: ngb
    password: ngb
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP_Reader
      maxLifetime: 2000000
      connectionTimeout: 30000

writer:
  enabled: true
  datasource:
    url: "jdbc:postgresql://localhost:5432/ngb?ApplicationName=ngb_storagemanager_writer"
    username: ngb
    password: ngb
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP_Writer
      maxLifetime: 2000000
      connectionTimeout: 30000


management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    restart:
      enabled: true

atcontext:
  url: http://localhost:9090/ngsi-ld/contextes/


broker:
  id: FedBroker1
  parent:
    location:
      url: SELF


               

#broker.customEndpoint=
#broker.geoCoverage={\\"type\\":\\"Polygon\\",\\"coordinates\\": [[[100.0, 0.0],[101.0, 0.0],[101.0, 1.0],[100.0, 1.0],[100.0, 0.0] ] ]}
#broker.geoCoverage={\\"type\\":\\"Polygon\\",\\"coordinates\\": [ [ [ 8.34686279296875, 49.298262740098345 ], [ 8.850860595703125, 49.298262740098345 ], [ 8.850860595703125, 49.55283460376055 ], [ 8.34686279296875, 49.55283460376055 ], [ 8.34686279296875, 49.298262740098345 ] ] ] }
#broker.geoCoverage={\\"type\\":\\"Polygon\\",\\"coordinates\\": [ [ [ 8.28643798828125, 49.60715036117516 ], [ 8.399047851562498, 49.60715036117516 ], [ 8.399047851562498, 49.664961282899974 ], [ 8.28643798828125, 49.664961282899974 ], [ 8.28643798828125, 49.60715036117516 ] ] ] }

#SELF in case of Fedaration broker

#broker.parent.location.url=http://10.0.4.33:9090/ngsi-ld/v1/csourceRegistrations/
#broker.parent.location.url=http://cema.nlehd.de:2095/ngsi-ld/v1/csourceRegistrations/          