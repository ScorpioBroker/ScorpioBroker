mysettings:
  application-name: c-sources
  kafka:
    bootstrap:
      host: ${kafka.host:localhost}
      port: ${kafka.port:9092}
  postgres:
    host: ${postgres.host:localhost}
    port: ${postgres.port:5432}
    username: ${postgres.user:ngb}
    password: ${postgres.name:ngb}
    database-name: ${postgres.dbname:ngb}
  gateway:
    host: ${gateway.host:localhost}
    port: ${gateway.port:9090}
jdbcurl: jdbc:postgresql://${mysettings.postgres.host}:${mysettings.postgres.port}/${mysettings.postgres.database-name}?ApplicationName=${mysettings.application-name}
atcontext:
  url: http://${mysettings.gateway.host}:${mysettings.gateway.port}/ngsi-ld/contextes/
bootstrap:
  servers: ${mysettings.kafka.bootstrap.host}:${mysettings.kafka.bootstrap.port}
server:
  port: 1030
spring:
#  mvc.pathpattern.matching-strategy: ant_path_matcher
  application.name: ${mysettings.application-name}
  main:
    lazy-initialization: true
  kafka:
    admin:
      properties:
        cleanup:
          policy: compact 
  datasource:
    password: ${mysettings.postgres.password}
    url: ${jdbcurl}
    username: ${mysettings.postgres.username}
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP
      maxLifetime: 2000000
      connectionTimeout: 30000
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${bootstrap.servers}
      bindings:
        CSOURCE_REGISTRATION_WRITE_CHANNEL:
          destination: CONTEXT_SOURCE
          contentType: application/json
        CSOURCE_NOTIFICATION_WRITE_CHANNEL:
          destination: CONTEXT_SOURCE_NOTIFICATION
          contentType: application/json
        ATCONTEXT_WRITE_CHANNEL:
          destination: ATCONTEXT
          contentType: application/json
        CSOURCE_SUBSCRIPTION_WRITE_CHANNEL:
          destination: CSOURCE_SUBSCRIPTIONS
          contentType: application/json  
csource:
  registry:
    topic: CONTEXT_REGISTRY
  source:
    topic: CONTEXT_SOURCE
  notification:
    topic: CONTEXT_SOURCE_NOTIFICATION
  query:
    topic: CONTEXT_REGISTRY_QUERY
    result:
      topic: CONTEXT_REGISTRY_QUERY_RESULT
      
submanager:
  subscription:
    topic: SUBSCRIPTIONS
reader:
  enabled: true
  datasource:
    password: ${mysettings.postgres.password}
    url: ${jdbcurl}
    username: ${mysettings.postgres.username}
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP_Reader
      maxLifetime: 2000000
      connectionTimeout: 30000

writer:
  enabled: true
  datasource:
    password: ${mysettings.postgres.password}
    url: ${jdbcurl}
    username: ${mysettings.postgres.username}
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP_Writer
      maxLifetime: 2000000
      connectionTimeout: 30000
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    restart:
      enabled: true
broker:
  id: FedBroker1
  parent:
    location:
      url: SELF


               

#broker.customEndpoint=
#broker.geoCoverage={\\"type\\":\\"Polygon\\",\\"coordinates\\": [[[100.0, 0.0],[101.0, 0.0],[101.0, 1.0],[100.0, 1.0],[100.0, 0.0] ] ]}
#broker.geoCoverage={\\"type\\":\\"Polygon\\",\\"coordinates\\": [ [ [ 8.34686279296875, 49.298262740098345 ], [ 8.850860595703125, 49.298262740098345 ], [ 8.850860595703125, 49.55283460376055 ], [ 8.34686279296875, 49.55283460376055 ], [ 8.34686279296875, 49.298262740098345 ] ] ] }
#broker.geoCoverage={\\"type\\":\\"Polygon\\",\\"coordinates\\": [ [ [ 8.28643798828125, 49.60715036117516 ], [ 8.399047851562498, 49.60715036117516 ], [ 8.399047851562498, 49.664961282899974 ], [ 8.28643798828125, 49.664961282899974 ], [ 8.28643798828125, 49.60715036117516 ] ] ] }

#SELF in case of Fedaration broker

#broker.parent.location.url=http://10.0.4.33:9090/ngsi-ld/v1/csourceRegistrations/
#broker.parent.location.url=http://cema.nlehd.de:2095/ngsi-ld/v1/csourceRegistrations/          