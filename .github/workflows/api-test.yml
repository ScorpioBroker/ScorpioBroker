name: API test against Java version
on: [push,pull_request]
jobs:
  build-java-mqtt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     
      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: start mqtt & postgis for unit tests
        run: |
          docker-compose -f ./compose-files/docker-compose-mqtt-postgis.yml up &
          sleep 30
      - name: build-java-with-mqtt
        run: |
          mvn clean package -DskipTests -Pmqtt -Dmqtt -Ddocker -Ddocker-tag=java-mqtt-${{steps.get-id.outputs.id}} -Dos=java -Dquarkus.profile=mqtt
      - name: stop mqtt & postgis for unit tests
        run: |
          docker-compose -f ./compose-files/docker-compose-mqtt-postgis.yml down
      - name: docker tag 
        run: |
          docker tag scorpiobroker/at-context-server:java-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/at-context-server:java-mqtt-latest
          docker tag scorpiobroker/history-entity-manager:java-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/history-entity-manager:java-mqtt-latest
          docker tag scorpiobroker/history-query-manager:java-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/history-query-manager:java-mqtt-latest
          docker tag scorpiobroker/registry-subscription-manager:java-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/registry-subscription-manager:java-mqtt-latest
          docker tag scorpiobroker/registry-manager:java-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/registry-manager:java-mqtt-latest
          docker tag scorpiobroker/subscription-manager:java-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/subscription-manager:java-mqtt-latest
          docker tag scorpiobroker/query-manager:java-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/query-manager:java-mqtt-latest
          docker tag scorpiobroker/entity-manager:java-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/entity-manager:java-mqtt-latest
          docker tag scorpiobroker/all-in-one-runner:java-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:java-mqtt-latest
      - name: start docker aaio 
        run: |
          docker-compose -f ./compose-files/docker-compose-java-aaio-mqtt-test.yml up > dockerout.log &
          sleep 120
      - name: newman action
        uses: matt-ball/newman-action@master
        with:
          collection: api-test.json
          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio
        if: always()
        run: docker-compose -f ./compose-files/docker-compose-java-aaio-mqtt-test.yml down
      - name: print log
        if: always()
        run: |
          cat dockerout.log
  build-java-activemq:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     
      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: start activemq & postgis for unit tests
        run: |
          docker-compose -f ./compose-files/docker-compose-activemq-postgis.yml up &
          sleep 30
      - name: build-java-with-activemq
        run: |
          mvn clean package -DskipTests -Pactivemq -Dactivemq -Ddocker -Ddocker-tag=java-activemq-${{steps.get-id.outputs.id}} -Dos=java -Dquarkus.profile=activemq
      - name: stop activemq & postgis for unit tests
        run: |
          docker-compose -f ./compose-files/docker-compose-activemq-postgis.yml down
      - name: docker tag 
        run: |
          docker tag scorpiobroker/at-context-server:java-activemq-${{steps.get-id.outputs.id}} scorpiobroker/at-context-server:java-activemq-latest
          docker tag scorpiobroker/history-entity-manager:java-activemq-${{steps.get-id.outputs.id}} scorpiobroker/history-entity-manager:java-activemq-latest
          docker tag scorpiobroker/history-query-manager:java-activemq-${{steps.get-id.outputs.id}} scorpiobroker/history-query-manager:java-activemq-latest
          docker tag scorpiobroker/registry-subscription-manager:java-activemq-${{steps.get-id.outputs.id}} scorpiobroker/registry-subscription-manager:java-activemq-latest
          docker tag scorpiobroker/registry-manager:java-activemq-${{steps.get-id.outputs.id}} scorpiobroker/registry-manager:java-activemq-latest
          docker tag scorpiobroker/subscription-manager:java-activemq-${{steps.get-id.outputs.id}} scorpiobroker/subscription-manager:java-activemq-latest
          docker tag scorpiobroker/query-manager:java-activemq-${{steps.get-id.outputs.id}} scorpiobroker/query-manager:java-activemq-latest
          docker tag scorpiobroker/entity-manager:java-activemq-${{steps.get-id.outputs.id}} scorpiobroker/entity-manager:java-activemq-latest
          docker tag scorpiobroker/all-in-one-runner:java-activemq-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:java-activemq-latest
      - name: start docker aaio 
        run: |
          docker-compose -f ./compose-files/docker-compose-java-aaio-activemq-test.yml up > dockerout.log &
          sleep 120
      - name: newman action
        uses: matt-ball/newman-action@master
        with:
          collection: api-test.json
          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio
        if: always()
        run: docker-compose -f ./compose-files/docker-compose-java-aaio-activemq-test.yml down
      - name: print log
        if: always()
        run: |
          cat dockerout.log
  build-java-rabbitmq:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     
      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: start rabbitmq & postgis for unit tests
        run: |
          docker-compose -f ./compose-files/docker-compose-rabbitmq-postgis.yml up &
          sleep 30
      - name: build-java-with-rabbitmq
        run: |
          mvn clean package -DskipTests -Prabbitmq -Drabbitmq -Ddocker -Ddocker-tag=java-rabbitmq-${{steps.get-id.outputs.id}} -Dos=java -Dquarkus.profile=rabbitmq
      - name: stop rabbitmq & postgis for unit tests
        run: |
          docker-compose -f ./compose-files/docker-compose-rabbitmq-postgis.yml down
      - name: docker tag 
        run: |
          docker tag scorpiobroker/at-context-server:java-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/at-context-server:java-rabbitmq-latest
          docker tag scorpiobroker/history-entity-manager:java-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/history-entity-manager:java-rabbitmq-latest
          docker tag scorpiobroker/history-query-manager:java-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/history-query-manager:java-rabbitmq-latest
          docker tag scorpiobroker/registry-subscription-manager:java-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/registry-subscription-manager:java-rabbitmq-latest
          docker tag scorpiobroker/registry-manager:java-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/registry-manager:java-rabbitmq-latest
          docker tag scorpiobroker/subscription-manager:java-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/subscription-manager:java-rabbitmq-latest
          docker tag scorpiobroker/query-manager:java-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/query-manager:java-rabbitmq-latest
          docker tag scorpiobroker/entity-manager:java-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/entity-manager:java-rabbitmq-latest
          docker tag scorpiobroker/all-in-one-runner:java-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:java-rabbitmq-latest
      - name: start docker aaio 
        run: |
          docker-compose -f ./compose-files/docker-compose-java-aaio-rabbitmq-test.yml up > dockerout.log &
          sleep 120
      - name: newman action
        uses: matt-ball/newman-action@master
        with:
          collection: api-test.json
          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio
        if: always()
        run: docker-compose -f ./compose-files/docker-compose-java-aaio-rabbitmq-test.yml down
      - name: print log
        if: always()
        run: |
          cat dockerout.log
  build-java-kafka:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     
      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: start kafka & postgis for unit tests
        run: |
          docker-compose -f ./compose-files/docker-compose-kafka-postgis.yml up &
          sleep 30
      - name: build-java-with-kafka
        run: |
          mvn clean package -DskipTests -Pkafka -Dkafka -Ddocker -Ddocker-tag=java-kafka-${{steps.get-id.outputs.id}} -Dos=java -Dquarkus.profile=kafka
      - name: stop kafka & postgis for unit tests
        run: |
          docker-compose -f ./compose-files/docker-compose-kafka-postgis.yml down
      - name: docker tag 
        run: |
          docker tag scorpiobroker/at-context-server:java-kafka-${{steps.get-id.outputs.id}} scorpiobroker/at-context-server:java-kafka-latest
          docker tag scorpiobroker/history-entity-manager:java-kafka-${{steps.get-id.outputs.id}} scorpiobroker/history-entity-manager:java-kafka-latest
          docker tag scorpiobroker/history-query-manager:java-kafka-${{steps.get-id.outputs.id}} scorpiobroker/history-query-manager:java-kafka-latest
          docker tag scorpiobroker/registry-subscription-manager:java-kafka-${{steps.get-id.outputs.id}} scorpiobroker/registry-subscription-manager:java-kafka-latest
          docker tag scorpiobroker/registry-manager:java-kafka-${{steps.get-id.outputs.id}} scorpiobroker/registry-manager:java-kafka-latest
          docker tag scorpiobroker/subscription-manager:java-kafka-${{steps.get-id.outputs.id}} scorpiobroker/subscription-manager:java-kafka-latest
          docker tag scorpiobroker/query-manager:java-kafka-${{steps.get-id.outputs.id}} scorpiobroker/query-manager:java-kafka-latest
          docker tag scorpiobroker/entity-manager:java-kafka-${{steps.get-id.outputs.id}} scorpiobroker/entity-manager:java-kafka-latest
          docker tag scorpiobroker/all-in-one-runner:java-kafka-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:java-kafka-latest
      - name: start docker aaio 
        run: |
          docker-compose -f ./compose-files/docker-compose-java-aaio-kafka-test.yml up > dockerout.log &
          sleep 120
      - name: newman action
        uses: matt-ball/newman-action@master
        with:
          collection: api-test.json
          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio
        if: always()
        run: docker-compose -f ./compose-files/docker-compose-java-aaio-kafka-test.yml down
      - name: print log
        if: always()
        run: |
          cat dockerout.log
#      - name: start docker dist 
#        run: |
#          docker-compose -f ./compose-files/docker-compose-java-dist-kafka-test.yml up &
#          sleep 120
#      - name: newman action
#        uses: matt-ball/newman-action@master
#        with:
#          collection: api-test.json
#          environment: api-test-dist-environment.json
#      - name: Stopping Scorpio 
#        run: docker-compose -f ./compose-files/docker-compose-java-dist-kafka-test.yml down
  build-java-aaio:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     
      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: start kafka & postgis for unit tests
        run: |
          docker-compose -f ./compose-files/docker-compose-postgis.yml up &
          sleep 30
      - name: build-java
        run: |
          mvn clean package -DskipTests -Din-memory -Pin-memory -Ddocker -Ddocker-tag=java-${{steps.get-id.outputs.id}} -Dos=java -Dquarkus.profile=in-memory
      - name: stop postgis for unit tests
        run: |
          docker-compose -f ./compose-files/docker-compose-postgis.yml down
      - name: docker tag
        run: |
          docker tag scorpiobroker/all-in-one-runner:java-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:java-latest
      - name: start docker aaio 
        run: |
          docker-compose -f ./compose-files/docker-compose-java-aaio-test.yml up > dockerout.log &
          sleep 120
      - name: newman action
        uses: matt-ball/newman-action@master
        with:
          collection: api-test.json
          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio 
        if: always()
        run: docker-compose -f ./compose-files/docker-compose-java-aaio-test.yml down 
      - name: print log
        if: always()
        run: |
          cat dockerout.log